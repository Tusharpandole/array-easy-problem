#first approach 
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
        for(int i = 0 ; i < nums.size() ; i++){
            nums[i] = nums[i]*nums[i] ;
        }
        sort(nums.begin() , nums.end()) ;
        return nums ;
    }
};
#second approach using the two pointer 
class Solution {
public:
    vector<int> sortedSquares(vector<int>& nums) {
       //using the two pointer approach 
    vector<int>output(nums.size() , 0 ) ;
       int n = nums.size()  ;
       int left =  0 ;
       int right = n-1 ;
       for(int i = n-1 ; i >= 0 ; i--){
           if(abs(nums[left]) > abs(nums[right])){
              output[i] = nums[left]*nums[left] ;
              left++ ;
           }
           else
           {
              output[i] = nums[right]*nums[right] ;
              right-- ;
           }
       }
       return output  ;
    }
};
