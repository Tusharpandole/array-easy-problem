#usual approach 
class Solution {
public:
    int fib(int n) {
      if(n == 0 || n == 1){
          return n ;
      }  
      
      
      return fib(n-1)+fib(n-2) ;
    }
};


#second approach using the dynamic programming 
// Dynamic Programming
public int fib(int n) {
	/* Declare an array to store Fibonacci numbers. */
	int f[] = new int[n + 1]; // 1 extra to handle case, n = 0
	int i;

	/* 0th and 1st number of the series are 0 and 1*/
	f[0] = 1;
	f[1] = 1;

	for (i = 2; i <= n; i++) {
		/* Add the previous 2 numbers in the series and store it */
		f[i] = f[i - 1] + f[i - 2];
	}

	return f[n];
}
